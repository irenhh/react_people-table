{"version":3,"sources":["Person.js","PeopleTable.js","NewPerson.js","App.js","index.js"],"names":["Person","props","_classNames","person","markRow","columnNames","tableRowClass","classNames","person--female","sex","person--male","person--mother","children","length","person--father","Object","defineProperty","concat","century","marked","personNameCellStyles","textDecoration","born","fontWeight","died","react_default","a","createElement","className","style","background","onClick","id","map","column","key","join","PeopleTable","people","sortBy","item","src_Person","NewPerson","state","currentName","currentBirthYear","currentDeathYear","touched","name","addCurrentInput","event","_this","setState","target","value","handleBlur","field","prevState","objectSpread","validateInput","input","test","replace","_this2","this","_this$props","submitNewPerson","toggleNewPersonPopup","addParent","getParentList","array","gender","toConsumableArray","filter","initialMothers","initialFathers","mothers","Date","now","fathers","type","onSubmit","placeholder","required","onChange","onBlur","selected","disabled","hidden","father","mother","React","Component","App","peopleList","peopleListToShow","shownPopup","parents","sortField","componentDidMount","fetch","then","response","json","result","index","age","Math","ceil","parent","child","dataToFind","toLowerCase","search","sortedArray","sort","b","localeCompare","reverse","preventDefault","data","FormData","newPerson","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","Symbol","iterator","next","done","get","String","err","return","currentParent","src_NewPerson","addName","handleOptionChange","addBirthYear","addDeathYear","src_PeopleTable","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.c3d419f9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction Person(props) {\n  const { person, markRow, columnNames } = props;\n\n  const tableRowClass = classNames({\n    person,\n    'person--female': person.sex === 'f',\n    'person--male': person.sex === 'm',\n    'person--mother': person.sex === 'f' && person.children.length > 0,\n    'person--father': person.sex === 'm' && person.children.length > 0,\n    [`person--lived-in-${person.century}`]: true,\n    'marked-row': person.marked,\n  });\n\n  const personNameCellStyles = {\n    textDecoration: person.born < 1650 && 'line-through',\n    fontWeight: person.died > 1800 && 'bold',\n  };\n\n  return (\n    <tr\n      className={tableRowClass}\n      style={{ background: person.sex === 'f' && 'lightpink' }}\n      onClick={() => markRow(person.id)}\n    >\n      {columnNames.map(column => (\n        <td\n          className={column === 'name' ? personNameCellStyles : null}\n          key={column}\n        >\n          {column === 'children' ? person[column].join(', ') : person[column]}\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n    age: PropTypes.number,\n    century: PropTypes.number,\n    children: PropTypes.arrayOf(PropTypes.string),\n    marked: PropTypes.bool,\n    id: PropTypes.number,\n  }).isRequired,\n\n  markRow: PropTypes.func.isRequired,\n  columnNames: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nfunction PeopleTable(props) {\n  const { people, sortBy, markRow } = props;\n\n  const columnNames = [\n    'id',\n    'name',\n    'sex',\n    'born',\n    'died',\n    'father',\n    'mother',\n    'age',\n    'century',\n    'children',\n  ];\n\n  return (\n    <table className=\"people-table\">\n      <thead>\n        <tr>\n          {columnNames.map(item => (\n            <th key={item} onClick={() => sortBy(item)}>{item}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <Person\n            key={person.id}\n            person={person}\n            markRow={markRow}\n            columnNames={columnNames}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortBy: PropTypes.func.isRequired,\n  markRow: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  state = {\n    currentName: '',\n    currentBirthYear: 0,\n    currentDeathYear: 0,\n    touched: {\n      name: false,\n      died: false,\n    },\n  }\n\n  addCurrentInput = (key, event) => {\n    this.setState({\n      [key]: event.target.value,\n    });\n  }\n\n  handleBlur = (field) => {\n    this.setState((prevState) => {\n      return {\n        touched: { ...prevState.touched, [field]: true },\n      };\n    });\n  }\n\n  validateInput = (input) => {\n    switch (input) {\n      case 'currentName':\n        return /\\d|\\W/.test(this.state.currentName.replace(/\\s/g, ''));\n\n      case 'currentDeathYear':\n        return (this.state.currentDeathYear - this.state.currentBirthYear) < 0\n        || (this.state.currentDeathYear - this.state.currentBirthYear) >= 150;\n\n      default: return true;\n    }\n  }\n\n  render() {\n    const {\n      submitNewPerson,\n      people,\n      toggleNewPersonPopup,\n      addParent,\n    } = this.props;\n\n    const getParentList = (array, gender) => {\n      return [...array]\n        .filter(person => person.born < this.state.currentBirthYear && person.sex === gender);\n    };\n\n    const initialMothers = getParentList(people, 'f');\n    const initialFathers = getParentList(people, 'm');\n\n    const mothers = initialMothers.length < 1\n      ? [{ name: 'unknown', id: Date.now() }]\n      : initialMothers;\n\n    const fathers = initialFathers.length < 1\n      ? [{ name: 'unknown', id: Date.now() }]\n      : initialFathers;\n\n    return (\n      <div className=\"popup-add-new-person\">\n        <h3 className=\"popup-title\">Adding a new person</h3>\n\n        <button\n          type=\"button\"\n          className=\"popup-close\"\n          onClick={toggleNewPersonPopup}\n        >\n          x\n        </button>\n\n        <form\n          onSubmit={submitNewPerson}\n          className=\"popup-form\"\n        >\n\n          <div className={\n            this.validateInput('currentName')\n              ? `error-input--message`\n              : 'hidden-block'\n          }>\n            name should contain only letters and spaces\n          </div>\n\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"type a name\"\n            required\n            className={this.validateInput('currentName') ? 'error-input' : ''}\n            onChange={event => this.addCurrentInput('currentName', event)}\n            onBlur={() => this.handleBlur('name')}\n          />\n\n          <div className=\"gender-radio\">\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"m\"\n              required\n            />\n\n            <label>male</label>\n\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"f\"\n              required\n            />\n\n            <label>female</label>\n          </div>\n\n          <input\n            type=\"number\"\n            name=\"born\"\n            placeholder=\"type the year of birth\"\n            required\n            onChange={event => this.addCurrentInput('currentBirthYear', event)}\n          />\n\n          <div\n            className={\n              this.validateInput('currentDeathYear')\n                ? `error-input--message`\n                : 'hidden-block'\n            }\n          >\n            age must me between 0 and 150 years\n          </div>\n\n          <input\n            type=\"number\"\n            name=\"died\"\n            placeholder=\"type the year of death\"\n            required\n            className={\n              this.validateInput('currentDeathYear')\n                ? `error-input--died error-input`\n                : ''\n            }\n\n            onChange={event => this.addCurrentInput('currentDeathYear', event)}\n            onBlur={() => this.handleBlur('died')}\n          />\n\n          <select required onChange={event => addParent('father', event)}>\n            <option value=\"\" selected disabled hidden>Choose a father</option>\n\n            {fathers.map(father => (\n              <option\n                value={father.name}\n                name=\"father\"\n                key={father.id}\n              >\n                {father.name}\n              </option>\n            ))}\n          </select>\n\n          <select required onChange={event => addParent('mother', event)}>\n            <option value=\"\" selected disabled hidden>Choose a mother</option>\n\n            {mothers.map(mother => (\n              <option\n                value={mother.name}\n                name=\"mother\"\n                key={mother.id}\n              >\n                {mother.name}\n              </option>\n            ))}\n          </select>\n\n          <button type=\"submit\">\n            Add new person\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  submitNewPerson: PropTypes.func.isRequired,\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggleNewPersonPopup: PropTypes.func.isRequired,\n  addParent: PropTypes.func.isRequired,\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\nimport './App.css';\nimport NewPerson from './NewPerson';\n\nclass App extends React.Component {\n  state = {\n    peopleList: [],\n    peopleListToShow: [],\n    shownPopup: false,\n    parents: {\n      mother: '',\n      father: '',\n    },\n    sortField: '',\n  }\n\n  componentDidMount = () => {\n    fetch('./api/people.json')\n      .then(response => response.json())\n      .then((result) => {\n        const getChildren = (array, parent) => (\n          array\n            .filter(child => (\n              child.father === parent.name || child.mother === parent.name\n            ))\n            .map(child => child.name)\n        );\n\n        const peopleList = result.map((item, index) => (\n          {\n            ...item,\n            id: index + 1,\n            age: item.died - item.born,\n            century: Math.ceil(item.died / 100),\n            children: getChildren(result, item),\n            marked: false,\n          }\n        ));\n\n        this.setState({\n          peopleList,\n          peopleListToShow: peopleList,\n        });\n      });\n  }\n\n  filter = (event) => {\n    const dataToFind = (event.target.value).toLowerCase();\n\n    this.setState((prevState) => {\n      const updatedList = prevState.peopleList.filter((item) => {\n        const dataToFilter = item.name + item.father + item.mother;\n\n        return dataToFilter.toLowerCase().search(\n          dataToFind\n        ) !== -1;\n      });\n\n      return { peopleListToShow: updatedList };\n    });\n  }\n\n  sortBy = (target) => {\n    this.setState((prevState) => {\n      let sortedArray;\n\n      switch (target) {\n        case 'name':\n          sortedArray = [...prevState.peopleList]\n            .sort((a, b) => a[target].localeCompare(b[target]));\n\n          break;\n\n        default: sortedArray = [...prevState.peopleList]\n          .sort((a, b) => a[target] - b[target]);\n      }\n\n      if (prevState.sortField === target) {\n        return { peopleListToShow: [...prevState.peopleListToShow.reverse()] };\n      }\n\n      return { peopleListToShow: sortedArray, sortField: target };\n    });\n  }\n\n  markRow = (id) => {\n    this.setState((prevState) => {\n      const modifiedList = [...prevState.peopleListToShow]\n        .map(person => ({\n          ...person,\n          marked: person.id === id,\n        }));\n\n      return {\n        peopleListToShow: modifiedList,\n      };\n    });\n  }\n\n  submitNewPerson = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    let newPerson = {};\n\n    for (const key of data.keys()) {\n      newPerson[key] = data.get(String(key));\n    }\n\n    newPerson = {\n      ...newPerson,\n      id: this.state.peopleListToShow.length + 1,\n      age: newPerson.died - newPerson.born,\n      century: Math.ceil(newPerson.died / 100),\n      children: [],\n      mother: this.state.parents.mother,\n      father: this.state.parents.father,\n      marked: false,\n    };\n\n    if (\n      newPerson.age < 0\n      || newPerson.age > 150\n      || /\\d|\\W/.test(newPerson.name.replace(/\\s/g, ''))\n    ) {\n      return false;\n    }\n\n    this.setState((prevState) => {\n      return {\n        peopleList: [...prevState.peopleList, newPerson],\n        peopleListToShow: [...prevState.peopleListToShow, newPerson],\n        shownPopup: false,\n      };\n    });\n  }\n\n  toggleNewPersonPopup = () => {\n    this.setState(prevState => ({ shownPopup: !prevState.shownPopup }));\n  }\n\n  addParent = (parent, event) => {\n    const currentParent = event.target.value;\n\n    this.setState(prevState => ({\n      parents: {\n        ...prevState.parents,\n        [parent]: currentParent,\n      },\n    }));\n  }\n\n  render() {\n    const { peopleListToShow } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">People table</h1>\n        <div className=\"app-title\">\n          {`(${peopleListToShow.length} people)`}\n        </div>\n\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"filter by name, mother and father\"\n            className=\"app-filtering\"\n            onChange={this.filter}\n          />\n        </form>\n\n        {!this.state.shownPopup && (\n          <button\n            type=\"button\"\n            className=\"adding-new-person\"\n            onClick={this.toggleNewPersonPopup}\n          >\n            Add a new person\n          </button>\n        )}\n\n        {this.state.shownPopup && (\n          <div className=\"app-popup\">\n            <NewPerson\n              people={this.state.peopleListToShow}\n              submitNewPerson={this.submitNewPerson}\n              addName={this.addName}\n              handleOptionChange={this.handleOptionChange}\n              addBirthYear={this.addBirthYear}\n              addDeathYear={this.addDeathYear}\n              toggleNewPersonPopup={this.toggleNewPersonPopup}\n              addParent={this.addParent}\n            />\n          </div>\n        )}\n\n        <PeopleTable\n          people={peopleListToShow}\n          sortBy={this.sortBy}\n          markRow={this.markRow}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}