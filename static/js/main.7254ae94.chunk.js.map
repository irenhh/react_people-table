{"version":3,"sources":["Person.js","PeopleTable.js","NewPerson.js","App.js","index.js"],"names":["Person","props","person","markRow","react_default","a","createElement","className","concat","sex","children","length","century","marked","style","background","onClick","id","born","textDecoration","died","fontWeight","name","father","mother","age","join","PeopleTable","state","_this$props","this","people","sortBy","map","item","key","src_Person","React","Component","NewPerson","currentName","currentBirthYear","currentDeathYear","touched","addCurrentInput","event","_this","setState","Object","defineProperty","target","value","handleBlur","field","prevState","objectSpread","validateInput","input","test","replace","_this2","submitNewPerson","closeNewPersonPopup","addParent","getParentList","array","gender","toConsumableArray","filter","mothers","fathers","type","onSubmit","placeholder","required","onChange","onBlur","selected","disabled","hidden","App","peopleList","peopleListToShow","showPopup","parents","componentDidMount","fetch","then","response","json","result","index","Math","ceil","parent","child","updatedList","toLowerCase","search","sortedArray","sort","b","localeCompare","preventDefault","data","FormData","newPerson","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","Symbol","iterator","next","done","get","String","err","return","showNewPersonPopup","src_NewPerson","addName","handleOptionChange","addBirthYear","addDeathYear","src_PeopleTable","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7254ae94.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Person(props) {\n  const { person, markRow } = props;\n\n  return (\n    <tr\n      className={`\n        person \n        ${person.sex === 'f' ? 'person--female' : 'person--male'}\n        ${person.sex === 'f' && person.children.length > 0\n          ? 'person--mother'\n          : person.sex === 'm' && person.children.length > 0\n          ? 'person--father'\n          : null\n        }\n\n        person--lived-in-${person.century}\n        ${person.marked && 'marked-row'}\n      `}\n\n      style={\n        person.sex === 'f' ? { background: 'lightpink' } : null\n      }\n\n      onClick={() => markRow(person.id)}\n    >\n      <td>{person.id}</td>\n      <td style={\n        person.born < 1650 \n        ? { textDecoration: 'line-through' } \n        : person.died > 1800 \n        ? { fontWeight: 'bold' } \n        : null\n      }>\n        {person.name}\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.father}</td>\n      <td>{person.mother}</td>\n      <td>{person.age}</td>\n      <td>{person.century}</td>\n      <td>{person.children.join(', ')}</td>\n    </tr>\n  );\n}\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    name: PropTypes.string,\n    sex: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n    age: PropTypes.number,\n    century: PropTypes.number,\n    children: PropTypes.arrayOf(PropTypes.string),\n    marked: PropTypes.bool,\n    id: PropTypes.number,\n  }).isRequired,\n  \n  markRow: PropTypes.func.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\n\nclass PeopleTable extends React.Component {\n  state = {\n\n  }\n\n  render() {\n    const { people, sortBy, markRow } = this.props;\n    const columnNames = [\n      'id',\n      'name',\n      'sex',\n      'born',\n      'died',\n      'father',\n      'mother',\n      'age',\n      'century',\n      'children',\n    ];\n\n    return (\n      <table className=\"people-table\">\n        <thead>\n          <tr>\n            {columnNames.map(item => (\n              <th key={item} onClick={() => sortBy(item)}>{item}</th>\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {people.map(person => (\n            <Person\n              key={person.id}\n              person={person}\n              markRow={markRow}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortBy: PropTypes.func.isRequired,\n  markRow: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  state = {\n    currentName: '',\n    currentBirthYear: 0,\n    currentDeathYear: 0,\n    touched: {\n      name: false,\n      died: false,\n    },\n  }\n\n  addCurrentInput = (key, event) => {\n    this.setState({\n      [key]: event.target.value,\n    });\n  }\n\n  handleBlur = (field) => {\n    this.setState((prevState) => {\n      return {\n        touched: { ...prevState.touched, [field]: true },\n      };\n    });\n  }\n\n  validateInput = (input) => {\n    switch (input) {\n      case 'currentName':\n        return /\\d|\\W/.test(this.state.currentName.replace(' ', ''));\n\n      case 'currentDeathYear':\n        return (this.state.currentDeathYear - this.state.currentBirthYear) < 0\n        || (this.state.currentDeathYear - this.state.currentBirthYear) >= 150;\n\n      default: return true;\n    }\n  }\n\n  render() {\n    const {\n      submitNewPerson,\n      people,\n      closeNewPersonPopup,\n      addParent,\n    } = this.props;\n\n    const getParentList = (array, gender) => {\n      return [...array]\n        .filter(person => person.born < this.state.currentBirthYear && person.sex === gender);\n    };\n\n    const mothers = getParentList(people, 'f');\n    const fathers = getParentList(people, 'm');\n\n    return (\n      <div className=\"popup-add-new-person\">\n        <h3 className=\"popup-title\">Adding a new person</h3>\n\n        <button\n          type=\"button\"\n          className=\"popup-close\"\n          onClick={closeNewPersonPopup}\n        >\n          x\n        </button>\n\n        <form onSubmit={submitNewPerson} className=\"popup-form\">\n          <div className={\n            this.validateInput('currentName')\n              ? `error-input--message`\n              : 'hidden-block'\n          }>\n            name should contain only letters and spaces\n          </div>\n\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"type a name\"\n            required\n            className={this.validateInput('currentName') ? 'error-input' : ''}\n            onChange={event => this.addCurrentInput('currentName', event)}\n            onBlur={() => this.handleBlur('name')}\n          />\n\n          <div className=\"gender-radio\">\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"m\"\n              required\n            />\n\n            <label>male</label>\n\n            <input\n              type=\"radio\"\n              name=\"sex\"\n              value=\"f\"\n              required\n            />\n\n            <label>female</label>\n          </div>\n\n          <input\n            type=\"number\"\n            name=\"born\"\n            placeholder=\"type the year of birth\"\n            required\n            onChange={event => this.addCurrentInput('currentBirthYear', event)}\n          />\n\n          <div className={\n            this.validateInput('currentDeathYear') \n              ? `error-input--message` \n              : 'hidden-block'\n          }>\n            age must me between 0 and 150 years\n          </div>\n\n          <input\n            type=\"number\"\n            name=\"died\"\n            placeholder=\"type the year of death\"\n            required\n            className={\n              this.validateInput('currentDeathYear')\n                ? `error-input--died error-input`\n                : ''\n            }\n            \n            onChange={event => this.addCurrentInput('currentDeathYear', event)}\n            onBlur={() => this.handleBlur('died')}\n          />\n\n          <select required onChange={event => addParent('father', event)}>\n            <option value=\"\" selected disabled hidden>Choose a father</option>\n\n            {fathers.map(father => (\n              <option value={father.name} name=\"father\">{father.name}</option>\n            ))}\n          </select>\n\n          <select required onChange={event => addParent('mother', event)}>\n            <option value=\"\" selected disabled hidden>Choose a mother</option>\n\n            {mothers.map(mother => (\n              <option value={mother.name} name=\"mother\">{mother.name}</option>\n            ))}\n          </select>\n\n          <button type=\"submit\">\n            Add new person\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  submitNewPerson: PropTypes.func.isRequired,\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  closeNewPersonPopup: PropTypes.func.isRequired,\n  addParent: PropTypes.func.isRequired,\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\nimport './App.css';\nimport NewPerson from './NewPerson';\n\nclass App extends React.Component {\n  state = {\n    peopleList: [],\n    peopleListToShow: [],\n    showPopup: false,\n    parents: {\n      mother: '',\n      father: '',\n    },\n  }\n\n  componentDidMount = () => {\n    fetch('./api/people.json')\n      .then(response => response.json())\n      .then((result) => {\n        const getChildren = (array, parent) => {\n          return array\n            .filter(child => child.father === parent.name || child.mother === parent.name)\n            .map(child => child.name);\n        };\n\n        const peopleList = result.map((item, index) => (\n          {\n            ...item,\n            id: index + 1,\n            age: item.died - item.born,\n            century: Math.ceil(item.died / 100),\n            children: getChildren(result, item),\n            marked: false,\n          }\n        ));\n\n        this.setState({\n          peopleList,\n          peopleListToShow: peopleList,\n        });\n      });\n  }\n\n  filter = (event) => {\n    let updatedList = this.state.peopleList;\n\n    updatedList = updatedList.filter((item) => {\n      const dataToSort = item.name + item.father + item.mother;\n\n      return dataToSort.toLowerCase().search(\n        event.target.value.toLowerCase()\n      ) !== -1;\n    });\n\n    this.setState({ peopleListToShow: updatedList });\n  }\n\n  sortBy = (target) => {\n    let sortedArray;\n    switch (target) {\n      case 'name': sortedArray = [...this.state.peopleList]\n        .sort((a, b) => a[target].localeCompare(b[target]));\n        break;\n\n      default: sortedArray = [...this.state.peopleList]\n        .sort((a, b) => a[target] - b[target]);\n    }\n\n    this.setState({ peopleListToShow: sortedArray });\n  }\n\n  markRow = (id) => {\n    this.setState((prevState) => {\n      const modifiedList = [...prevState.peopleListToShow]\n        .map((person) => {\n          return {\n            ...person,\n            marked: false,\n          };\n        })\n        .map((person) => {\n          if (person.id === id) {\n            return {\n              ...person,\n              marked: true,\n            };\n          }\n\n          return person;\n        });\n\n      return {\n        peopleListToShow: modifiedList,\n      };\n    });\n  }\n\n  submitNewPerson = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.target);\n    let newPerson = {};\n\n    for (const key of data.keys()) {\n      newPerson[key] = data.get(String(key));\n    }\n\n    newPerson = {\n      ...newPerson,\n      id: this.state.peopleListToShow.length + 1,\n      children: [],\n      mother: this.state.parents.mother,\n      father: this.state.parents.father,\n    };\n\n    this.setState((prevState) => {\n      return {\n        peopleList: [...prevState.peopleList, newPerson],\n        peopleListToShow: [...prevState.peopleListToShow, newPerson],\n        showPopup: false,\n      };\n    });\n  }\n\n  showNewPersonPopup = () => {\n    this.setState({ showPopup: true });\n  }\n\n  closeNewPersonPopup =() => {\n    this.setState({ showPopup: false });\n  }\n\n  addParent = (parent, event) => {\n    this.setState({\n      parents: {\n        ...this.state.parents,\n        [parent]: event.target.value,\n      },\n    });\n  }\n\n  render() {\n    const { peopleListToShow } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-title\">People table</h1>\n        <div className=\"app-title\">\n          {`(${peopleListToShow.length} people)`}\n        </div>\n\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"filter by name, mother and father\"\n            className=\"app-filtering\"\n            onChange={this.filter}\n          />\n        </form>\n\n        {!this.state.showPopup && (\n          <button\n            type=\"button\"\n            className=\"adding-new-person\"\n            onClick={this.showNewPersonPopup}\n          >\n            Add a new person\n          </button>\n        )}\n\n        {this.state.showPopup && (\n          <div className=\"app-popup\">\n            <NewPerson\n              people={this.state.peopleListToShow}\n              submitNewPerson={this.submitNewPerson}\n              addName={this.addName}\n              handleOptionChange={this.handleOptionChange}\n              addBirthYear={this.addBirthYear}\n              addDeathYear={this.addDeathYear}\n              closeNewPersonPopup={this.closeNewPersonPopup}\n              addParent={this.addParent}\n            />\n          </div>\n        )}\n\n        <PeopleTable\n          people={peopleListToShow}\n          sortBy={this.sortBy}\n          markRow={this.markRow}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}